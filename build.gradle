import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.standardout:bnd-platform:1.7.0'
        classpath 'com.github.missedone:gradle-bintray-p2-plugin:1.2.0'
    }
}

plugins {
    id 'java'
    id 'nebula.release' version '13.0.0'
}

apply plugin: 'org.standardout.bnd-platform'
apply plugin: 'bintray-p2'

group 'org.contextmapper'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.freemarker:freemarker:${freemarkerVersion}"
    implementation "io.swagger.core.v3:swagger-core:${swaggerCoreVersion}"
    implementation "io.swagger.parser.v3:swagger-parser:${swaggerParserVersion}"
    implementation "com.sun.activation:jakarta.activation:${jakartaAPIVersion}"
}

configurations.all {
    exclude group:"com.google.code.findbugs", module: "jsr305"
    exclude group:"org.slf4j"
}

defaultTasks 'updateSiteZip'
updateSiteZip.dependsOn clean
build.finalizedBy(updateSiteZip)

platform {

    feature(id: 'contextmapper.freemarker', name: 'Freemarker Templating Engine', version: freemarkerVersion) {
        plugin "org.freemarker:freemarker:${freemarkerVersion}"
    }

    feature(id: 'contextmapper.swagger.core', name: 'Swagger Core', version: swaggerCoreVersion) {
        plugin "io.swagger.core.v3:swagger-core:${swaggerCoreVersion}", {
            exclude group: 'org.slf4j'
        }
        plugin "com.sun.activation:jakarta.activation:${jakartaAPIVersion}"
    }

    feature(id: 'contextmapper.swagger.parser', name: 'Swagger Parser', version: swaggerParserVersion) {
        plugin "io.swagger.parser.v3:swagger-parser:${swaggerParserVersion}", {
            exclude group: 'org.slf4j'
        }
        plugin "com.github.fge:jackson-coreutils:1.8", {
            bnd {
                instruction 'Import-Package', "!javax.annotation,!com.google.common.io,!com.google.common.collect,!com.google.common.base,com.google.common.io;version=\"[16.0,28)\",com.google.common.collect;version=\"[16.0,28)\",com.google.common.base;version=\"[16.0,28)\",*"
            }
        }

        plugin "com.github.fge:json-patch:1.6", {
            bnd {
                instruction 'Import-Package', "!com.google.common.collect,!com.google.common.base,com.google.common.collect;version=\"[16.0,28)\",com.google.common.base;version=\"[16.0,28)\",*"
            }
        }

        plugin "com.github.fge:uri-template:0.9", {
            bnd {
                instruction 'Import-Package', "!com.google.common.base,!com.google.common.collect,!com.google.common.escape,!com.google.common.net,com.google.common.base;version=\"[16.0,28)\",com.google.common.collect;version=\"[16.0,28)\",com.google.common.escape;version=\"[16.0,28)\",com.google.common.net;version=\"[16.0,28)\",*"
            }
        }

        plugin "com.github.java-json-tools:json-schema-core:1.2.8", {
            bnd {
                instruction 'Import-Package', "!javax.annotation,!com.google.common.base,!com.google.common.cache,!com.google.common.collect,!com.google.common.io,!com.google.common.net,!com.google.common.primitives,com.google.common.base;version=\"[16.0,28)\",com.google.common.cache;version=\"[16.0,28)\",com.google.common.collect;version=\"[16.0,28)\",com.google.common.io;version=\"[16.0,28)\",com.google.common.net;version=\"[16.0,28)\",com.google.common.primitives;version=\"[16.0,28)\",*"
            }
        }

        plugin "com.github.java-json-tools:json-schema-validator:2.2.8", {
            bnd {
                instruction 'Import-Package', "!javax.annotation,!com.google.common.base,!com.google.common.collect,!com.google.common.net,com.google.common.base;version=\"[16.0,28)\",com.google.common.collect;version=\"[16.0,28)\",com.google.common.net;version=\"[16.0,28)\",*"
            }
        }

        plugin "com.google.guava:guava:27.0.1-android", {
            bnd {
                instruction 'Import-Package', "com.google.common.util.concurrent.internal;version=\"[1.0,2)\""
            }
        }

        plugin "com.github.fge:msg-simple:1.1", {
            bnd {
                instruction 'Import-Package', "!javax.annotation,*"
            }
        }

        plugin "io.swagger:swagger-compat-spec-parser:1.0.51", {
            bnd {
                instruction 'Import-Package', "!javax.annotation,*"
            }
        }
    }

    featureId 'org.contextmapper.bundles.feature.aggregation'
    featureName 'All Bundles (Aggregation)'
    featureVersion project.version.toString().endsWith('SNAPSHOT') ? project.version.toString().replace("SNAPSHOT", "") + new SimpleDateFormat("YYYYMMddHHmmss").format(new Date()) : project.version.toString()
    featureProvider 'Context Mapper'
    categoryName 'Context Mapper OSGi Bundles'

    useBndHashQualifiers false
    useFeatureHashQualifiers false
    defaultQualifier new SimpleDateFormat("YYYYMMddHHmmss").format(new Date())
}

publishP2Repo {
    repoOwner = 'contextmapper'
    repoName = project.version.toString().endsWith('SNAPSHOT') ? 'context-mapper-osgi-bundle-snapshots' : 'context-mapper-osgi-bundles'
    compositePackage = ''
    subCompositeStrategy = 'MICRO'
    apiKey = System.getenv('BINTRAY_API_KEY')
    user = System.getenv('BINTRAY_USERNAME')
    packageVersion = project.version.toString().endsWith('SNAPSHOT') ? project.version.toString().replace("-SNAPSHOT", ".") + new SimpleDateFormat("YYYYMMddHHmmss").format(new Date()) : project.version.toString()
}
